/**
 * Implements hook_fullcalendar_classes().
 *
 * Generates custom class names for FullCalendar based on taxonomy term order.
 *
 * @param \Drupal\node\NodeInterface $entity
 *   The event node entity.
 *
 * @return string[]
 *   An array of CSS class names.
 */
function mymodule_fullcalendar_classes(\Drupal\node\NodeInterface $entity): array {
  $classes = [];

  if ($entity->bundle() !== 'event') {
    return $classes;
  }

  $vocabulary_id = 'event_category';

  // Load all taxonomy terms for the vocabulary.
  $terms = \Drupal::entityTypeManager()
    ->getStorage('taxonomy_term')
    ->loadByProperties(['vid' => $vocabulary_id]);

  // Sort terms by term ID.
  usort($terms, fn(\Drupal\taxonomy\TermInterface $a, \Drupal\taxonomy\TermInterface $b) => $a->id() <=> $b->id());

  // Map term ID to index using array_flip().
  $term_index_map = array_flip(array_map(fn(\Drupal\taxonomy\TermInterface $term) => $term->id(), $terms));

  // Process the entity's assigned taxonomy terms.
  if ($entity->hasField('field_event_category') && !$entity->get('field_event_category')->isEmpty()) {
    $event_terms = $entity->get('field_event_category')->referencedEntities();

    foreach ($event_terms as $term) {
      $tid = $term->id();
      $term_name = strtolower(str_replace(' ', '-', $term->getName()));

      if (isset($term_index_map[$tid])) {
        $index = $term_index_map[$tid];
        $classes[] = "taxonomy-term-$index-$term_name";
      }
    }
  }

  return $classes;
}