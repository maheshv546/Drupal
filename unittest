<?php

use Drupal\Tests\UnitTestCase;
use Drupal\Core\Entity\EntityInterface;

/**
 * Tests the hook_fullcalendar_classes() function.
 *
 * @group mymodule
 */
class FullCalendarClassesTest extends UnitTestCase {

  /**
   * Tests hook_fullcalendar_classes() returns expected classes.
   */
  public function testFullCalendarClasses() {
    // Mock the entity implementing EntityInterface.
    $entity = $this->createMock(EntityInterface::class);

    // Mock a taxonomy term field.
    $taxonomy_field_name = 'field_event_type';

    // Simulate that the entity has a taxonomy field.
    $entity->method('hasField')->with($taxonomy_field_name)->willReturn(TRUE);

    // Mock the taxonomy term IDs.
    $term_ids = [3, 5, 7]; // Example term IDs.
    $entity->method('get')->with($taxonomy_field_name)->willReturn(
      new class($term_ids) {
        private $term_ids;
        public function __construct($term_ids) { $this->term_ids = $term_ids; }
        public function getValue() {
          return array_map(fn($id) => ['target_id' => $id], $this->term_ids);
        }
      }
    );

    // Call the function being tested.
    $result = hook_fullcalendar_classes($entity);

    // Define expected class names.
    $expected_classes = ['taxonomy-term-3', 'taxonomy-term-5', 'taxonomy-term-7'];

    // Assert that the expected classes are returned.
    $this->assertEquals($expected_classes, $result);
  }
}