terms:
  vocabulary: categories
  items:
    - id: news
      label: "News"
    - id: blog
      label: "Blog"
    - id: tutorials
      label: "Tutorials"


use Drupal\taxonomy\Entity\Term;
use Drupal\taxonomy\Entity\Vocabulary;

/**
 * Import taxonomy terms from configuration.
 */
function my_module_post_update_import_terms() {
  $config = \Drupal::config('my_module.taxonomy_terms');
  $vocabulary_id = $config->get('vocabulary');

  // Ensure vocabulary exists.
  if (!Vocabulary::load($vocabulary_id)) {
    $vocabulary = Vocabulary::create([
      'vid' => $vocabulary_id,
      'name' => ucfirst($vocabulary_id),
    ]);
    $vocabulary->save();
  }

  $existing_terms = \Drupal::entityTypeManager()
    ->getStorage('taxonomy_term')
    ->loadByProperties(['vid' => $vocabulary_id]);

  $existing_term_names = [];
  foreach ($existing_terms as $term) {
    $existing_term_names[$term->get('field_machine_name')->value] = $term;
  }

  foreach ($config->get('items') as $item) {
    if (!isset($existing_term_names[$item['id']])) {
      $term = Term::create([
        'vid' => $vocabulary_id,
        'name' => $item['label'],
        'field_machine_name' => $item['id'], // Custom field to store machine names.
      ]);
      $term->


use Drupal\taxonomy\Entity\Term;
use Drupal\Core\Config\ConfigFactoryInterface;
use Drupal\taxonomy\Entity\Vocabulary;
use Drupal\Core\Entity\EntityTypeManagerInterface;

class TermConfigService {
  protected ConfigFactoryInterface $configFactory;
  protected EntityTypeManagerInterface $entityTypeManager;

  public function __construct(ConfigFactoryInterface $configFactory, EntityTypeManagerInterface $entityTypeManager) {
    $this->configFactory = $configFactory;
    $this->entityTypeManager = $entityTypeManager;
  }

  public function syncTerms(string $vocabulary) {
    // Delete all existing terms.
    $terms = $this->entityTypeManager->getStorage('taxonomy_term')->loadByProperties(['vid' => $vocabulary]);
    foreach ($terms as $term) {
      $term->delete();
    }

    // Load terms from configuration.
    $config = $this->configFactory->get('my_module.terms');
    $terms_data = $config->get('terms') ?? [];

    foreach ($terms_data as $term_data) {
      Term::create([
        'vid' => $vocabulary,
        'name' => $term_data['name'],
      ])->save();
    }
  }
}

function my_module_update_9001() {
  \Drupal::service('my_module.term_config_service')->syncTerms('my_vocabulary');
}



