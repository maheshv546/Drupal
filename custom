/**
 * Implements hook_preprocess_fullcalendar_event().
 *
 * Adds event taxonomy terms and their classes to the calendar event render array.
 */
function mymodule_preprocess_fullcalendar_event(array &$variables): void {
  /** @var \Drupal\node\NodeInterface $event */
  $event = $variables['entity'];

  // Ensure it's an event node.
  if ($event->bundle() !== 'event') {
    return;
  }

  // Get the event taxonomy terms and classes.
  $terms = $event->hasField('field_event_category') && !$event->get('field_event_category')->isEmpty()
    ? $event->get('field_event_category')->referencedEntities()
    : [];

  // Generate term labels and corresponding CSS classes.
  $term_labels = [];
  foreach ($terms as $term) {
    $tid = $term->id();
    $term_name = $term->getName();
    $css_class = "taxonomy-term-" . $tid . "-" . strtolower(str_replace(' ', '-', $term_name));

    // Store the term label with its associated class.
    $term_labels[] = [
      'label' => $term_name,
      'class' => $css_class,
    ];
  }

  // Pass the formatted terms to the calendar template.
  $variables['event_terms'] = $term_labels;
}

<div class="calendar-event">
  <h3 class="calendar-event-title">{{ title }}</h3>

  <div class="calendar-event-meta">
    <span class="event-label">Events:</span>

    <span class="event-taxonomy">
      {% for term in event_terms %}
        <span class="event-term {{ term.class }}">{{ term.label }}</span>
      {% endfor %}
    </span>
  </div>
</div>

.calendar-event-meta {
  display: flex;
  align-items: center;
  gap: 10px;
}

.event-label {
  font-weight: bold;
}

.event-taxonomy {
  display: flex;
  gap: 5px;
}

.event-term {
  padding: 2px 6px;
  border-radius: 3px;
  background-color: #f3f3f3;
  font-size: 12px;
}

.taxonomy-term-1-workshop { background-color: #ffcc00; }
.taxonomy-term-2-webinar { background-color: #0099ff; }
.taxonomy-term-3-conference { background-color: #66cc66; }