/**
   * Test the header logo block.
   */
  public function testHeaderBlock(): void {
    $selector = '#block-voya-header-block';
    $block = $this->drupalPlaceBlock('voya_header', [
      'id' => 'voya-header-block',
      'service_links_display' => 'split',
    ]);
    // Create a test file and copy it into the public file system.
    file_put_contents('temporary://test_file.pdf', 'hello world');
    $public_directory = PublicStream::basePath();
    $test_file = \Drupal::service('file_system')->copy('temporary://test_file.pdf', $public_directory, FileExists::Replace);
    $test_file_data = file_get_contents($test_file);

    // Create a test temp file in public directory and set it as temporary.
    $file_public_temporary = File::create(['uri' => 'public://Portland_logo - City seal only.png']);
    $file_public_temporary->setTemporary();
    file_put_contents($file_public_temporary->getFileUri(), $test_file_data);
    $file_public_temporary->save();
    $this->config('system.theme.global')->set('logo.use_default', 0);
    $this->config('system.theme.global')->set('logo.path', $file_public_temporary->getFileUri());
    $this->config('system.theme.global')->save();
    $this->drupalGet('');
    $logo_file_withspace = $this->xpath(
      '//img[@src=:url and @alt=:alt]',
      [
        ':url' => \Drupal::service('file_url_generator')->generateString($file_public_temporary->getFileUri()),
        ':alt' => $this->config('system.site')->get('name') . ' logo',
      ]
    );
    $this->assertCount(1, $logo_file_withspace, 'The expected logo image rendered with space.');

    $file_public_temporary_withoutspace = File::create(['uri' => 'public://Portland_logo-City-seal-only.png']);
    $file_public_temporary_withoutspace->setTemporary();
    file_put_contents($file_public_temporary_withoutspace->getFileUri(), $test_file_data);
    $file_public_temporary_withoutspace->save();
    $this->drupalGet('');
    $logo_file_withoutspace = $this->xpath(
      '//img[@src=:url and @alt=:alt]',
      [
        ':url' => \Drupal::service('file_url_generator')->generateString($file_public_temporary_withoutspace->getFileUri()),
        ':alt' => $this->config('system.site')->get('name') . ' logo',
      ]
    );
    $this->assertCount(0, $logo_file_withoutspace, 'The expected logo image rendered without space.');
  }
