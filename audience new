/**
 * Test the header logo block with filenames with and without spaces.
 */
public function testHeaderBlock(): void {
  $selector = '#block-voya-header-block';

  // Place the header block.
  $this->drupalPlaceBlock('voya_header', [
    'id' => 'voya-header-block',
    'service_links_display' => 'split',
  ]);

  // Create dummy file content.
  file_put_contents('temporary://test_file.pdf', 'hello world');
  $public_directory = PublicStream::basePath();
  $test_file = \Drupal::service('file_system')->copy('temporary://test_file.pdf', $public_directory, FileExists::Replace);
  $test_file_data = file_get_contents($test_file);

  // === Test logo with space in filename ===
  $file_with_space = File::create(['uri' => 'public://Portland_logo - City seal only.png']);
  $file_with_space->setTemporary();
  file_put_contents($file_with_space->getFileUri(), $test_file_data);
  $file_with_space->save();

  $this->config('system.theme.global')
    ->set('logo.use_default', FALSE)
    ->set('logo.path', $file_with_space->getFileUri())
    ->save();

  $this->drupalGet('<front>');
  $logo_with_space = $this->xpath('//img[@src=:url and @alt=:alt]', [
    ':url' => \Drupal::service('file_url_generator')->generateString($file_with_space->getFileUri()),
    ':alt' => $this->config('system.site')->get('name') . ' logo',
  ]);
  $this->assertCount(1, $logo_with_space, 'Logo image with space in filename is rendered.');

  // === Test logo without space in filename ===
  $file_without_space = File::create(['uri' => 'public://Portland_logo-City-seal-only.png']);
  $file_without_space->setTemporary();
  file_put_contents($file_without_space->getFileUri(), $test_file_data);
  $file_without_space->save();

  // Switch to the new logo file.
  $this->config('system.theme.global')
    ->set('logo.path', $file_without_space->getFileUri())
    ->save();

  $this->drupalGet('<front>');
  $logo_without_space = $this->xpath('//img[@src=:url and @alt=:alt]', [
    ':url' => \Drupal::service('file_url_generator')->generateString($file_without_space->getFileUri()),
    ':alt' => $this->config('system.site')->get('name') . ' logo',
  ]);
  $this->assertCount(1, $logo_without_space, 'Logo image without space in filename is rendered.');
}